10 log(1 + x)



1,10
0.8935735059574078,5
.8696500609813312,4
0.8437001594896332,3
0.7647058823529421,0
0.7356787691153026,-1
0.7085655314757492,-2
0.6575288488601192,-4
0.6336054038840426,-5
0.6096819589079661,-6
0.5889483065953663,-7
0.5666197579510283,-8
0.5267473496575673,-10
0.4916596303593217,-12
0.44381274040716856,-15
0.3672577164837236,-20
0.31462613753635515,-25
0.26199455858898674,-30
0.18065484567032647,-40
0.11207430340557367,-50
0.05625293179472838,-60
0.024355005159959642,-70
0.010000938174313708,-80
0,-100




0,7647058823529421  == 0db

10^db0 = 5,8170913293743708197932236097916

la valeur comprise entre 0 et 1

X = la valeur comprise entre 0 et 1

si X > db0 
	((10^x) - (10^db0)) / 0.42
	((10^x) - 5,8170913293743708197932236097916) / 0.42
	0.42 --> trouvé par approximation
	
si X < db0
	65.7*log(x)+db0*10
	65.7*log(x)+7.647058823529421
	65.7 --> trouvé par approximation

si X == db0
	x == 1

	
---------------------------------------------------------
#include <stdio.h>
#include <math.h>

// compile option for log ==> -lm

int main()
{
    printf("Hello, World!\n");

//	float f = .7647058823529421;
	float f = .05625293179472838;
	float db0 = .7647058823529421;
	float result;

// add 'a' to L/R or Bus mix level. 'a' is in db.
//
//	level: a float with value in [0.0...1.0 (+10 dB), steps]  ->  4	"linear" dB ranges:
//	0.0...0.0625 (-oo, -90...-60 dB),
//	0.0625...0.25 (-60...-30 dB),
//	0.25...0.5 (-30...-10dB) and
//	0.5...1.0 (-10...+10dB)
//

//si X > db0 
//	((10^x) - (10^db0)) / 0.42
//	((10^x) - 5,8170913293743708197932236097916) / 0.42
//	0.42 --> trouvé par approximation
	
//si X < db0
//	65.7*log(x)+db0*10
//	65.7*log(x)+7.647058823529421
//	65.7 --> trouvé par approximation

//si X == db0
//	x == 1

	printf("f before: %f\n", f);

	if (f > db0)	            		result = (pow(10,f) - pow(10,db0)) / 0.42;
	else if (f == db0)	                result = 1;
	else if (f > 0.26 && f < db0)		result = (65.7*log10(f) + (db0*10))+0.6;
	else if (f < 0.16 && f < db0)		result = (65.7*log10(f) + (db0*10))+5.0;
	else if (f < 0.26 && f < db0)		result = (65.7*log10(f) + (db0*10))+0.8;

	printf("f before in db: %f %.1f\n", result, round(result));

    return 0;
}